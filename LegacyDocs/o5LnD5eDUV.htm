<!DOCTYPE html>
<!-- saved from url=(0079)https://web.archive.org/web/20170707172505/http://www.wildnoodle.com/tutorial-1 -->
<html dir="ltr" lang="en-US" class="chrome chrome81 desktop custom-responsive"><head id="ctl00_Head1"><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script src="./o5LnD5eDUV_files/analytics.js" type="text/javascript"></script>
<script type="text/javascript">window.addEventListener('DOMContentLoaded',function(){var v=archive_analytics.values;v.service='wb';v.server_name='wwwb-app39.us.archive.org';v.server_ms=275;archive_analytics.send_pageview({});});</script><script type="text/javascript" src="./o5LnD5eDUV_files/ait-client-rewrite.js" charset="utf-8"></script>
<script type="text/javascript">
WB_wombat_Init("https://web.archive.org/web/", "20170707172505", "www.wildnoodle.com:80");
</script>
<script type="text/javascript" src="./o5LnD5eDUV_files/wbhack.js" charset="utf-8"></script>
<script type="text/javascript">
__wbhack.init('https://web.archive.org/web');
</script>
<script type="text/javascript" src="./o5LnD5eDUV_files/playback.bundle.js" charset="utf-8"></script>
<link rel="stylesheet" type="text/css" href="./o5LnD5eDUV_files/banner-styles.css">
<link rel="stylesheet" type="text/css" href="./o5LnD5eDUV_files/iconochive.css">
<!-- End Wayback Rewrite JS Include -->
<title>
	Wild Noodle | Teaching Programming Made Easy
</title>

<link rel="search" type="application/opensearchdescription+xml" title="Wild Noodle Site Search" href="https://web.archive.org/web/20170707172505/http://www.wildnoodle.com/SearchEngineInfo.ashx"><meta name="robots" content="no index, no follow"><meta name="viewport" content="initial-scale = 1.0, maximum-scale = 1.0, user-scalable = no, width = device-width">
<link rel="stylesheet" type="text/css" href="./o5LnD5eDUV_files/jquery-ui.css">
<link rel="stylesheet" type="text/css" href="./o5LnD5eDUV_files/csshandler.ashx">

<link rel="shortcut icon" href="https://web.archive.org/web/20170707172505im_/http://www.wildnoodle.com/Data/Sites/1/skins/Wildnoodle_Home/favicon.ico">
<script src="./o5LnD5eDUV_files/jquery.min.js" type="text/javascript"></script>
<script src="./o5LnD5eDUV_files/jquery-migrate1-0-0.js" type="text/javascript"></script>
<script src="./o5LnD5eDUV_files/jquery-ui.min.js" type="text/javascript"></script><link rel="apple-touch-icon" sizes="57x57" href="https://web.archive.org/web/20170707172505im_/http://www.wildnoodle.com/apple-touch-icon-57x57.png"><link rel="apple-touch-icon" sizes="60x60" href="https://web.archive.org/web/20170707172505im_/http://www.wildnoodle.com/apple-touch-icon-60x60.png"><link rel="apple-touch-icon" sizes="72x72" href="https://web.archive.org/web/20170707172505im_/http://www.wildnoodle.com/apple-touch-icon-72x72.png"><link rel="apple-touch-icon" sizes="76x76" href="https://web.archive.org/web/20170707172505im_/http://www.wildnoodle.com/apple-touch-icon-76x76.png"><link rel="apple-touch-icon" sizes="114x114" href="https://web.archive.org/web/20170707172505im_/http://www.wildnoodle.com/apple-touch-icon-114x114.png"><link rel="apple-touch-icon" sizes="120x120" href="https://web.archive.org/web/20170707172505im_/http://www.wildnoodle.com/apple-touch-icon-120x120.png"><link rel="icon" type="image/png" href="https://web.archive.org/web/20170707172505im_/http://www.wildnoodle.com/favicon-32x32.png" sizes="32x32"><link rel="icon" type="image/png" href="https://web.archive.org/web/20170707172505im_/http://www.wildnoodle.com/favicon-96x96.png" sizes="96x96"><link rel="icon" type="image/png" href="https://web.archive.org/web/20170707172505im_/http://www.wildnoodle.com/favicon-16x16.png" sizes="16x16"><link rel="manifest" href="https://web.archive.org/web/20170707172505/http://www.wildnoodle.com/manifest.json"><link rel="mask-icon" href="https://web.archive.org/web/20170707172505im_/http://www.wildnoodle.com/safari-pinned-tab.svg" color="#5bbad5"><meta name="msapplication-TileColor" content="#da532c"><meta name="theme-color" content="#ffffff">
<link rel="canonical" href="https://web.archive.org/web/20170707172505/http://www.wildnoodle.com/tutorial-1"><script type="text/javascript" async="" src="./o5LnD5eDUV_files/ga.js"></script></head>
<body id="ctl00_Body" class="pagebody"><!-- BEGIN WAYBACK TOOLBAR INSERT -->
<style type="text/css">
body {
  margin-top:0 !important;
  padding-top:0 !important;
  /*min-width:800px !important;*/
}
.wb-autocomplete-suggestions {
    text-align: left; cursor: default; border: 1px solid #ccc; border-top: 0; background: #fff; box-shadow: -1px 1px 3px rgba(0,0,0,.1);
    position: absolute; display: none; z-index: 2147483647; max-height: 254px; overflow: hidden; overflow-y: auto; box-sizing: border-box;
}
.wb-autocomplete-suggestion { position: relative; padding: 0 .6em; line-height: 23px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; font-size: 1.02em; color: #333; }
.wb-autocomplete-suggestion b { font-weight: bold; }
.wb-autocomplete-suggestion.selected { background: #f0f0f0; }
</style>
<div id="wm-ipp-base" lang="en" style="display: block; direction: ltr;">
</div><div id="donato" style="position:relative;width:100%;">
  <div id="donato-base">
    <iframe id="donato-if" src="./o5LnD5eDUV_files/donate.html" scrolling="no" frameborder="0" style="width:100%; height:100%">
    </iframe>
  </div>
</div><script type="text/javascript">
__wm.bt(625,27,25,2,"web","http://www.wildnoodle.com/tutorial-1","20170707172505",1996,"/_static/",['css/banner-styles.css','css/iconochive.css']);
</script><div class="wb-autocomplete-suggestions " style="left: 163px; top: 2273px; width: 697px;"></div>
<!-- END WAYBACK TOOLBAR INSERT -->
    <script type="text/javascript"> 
var _gaq = _gaq || []; 
_gaq.push(['_setAccount','UA-89856390-1']); 
_gaq.push(['_gat._anonymizeIp']);
_gaq.push(['_setCustomVar', 1, 'member-type', 'anonymous', 1]); _gaq.push(['_trackPageview']); 
 _gaq.push(['_trackPageLoadTime']); 
 </script>
	
	
    <form method="post" action="https://web.archive.org/web/20170707172505/http://www.wildnoodle.com/" id="aspnetForm">
<input type="hidden" name="__VIEWSTATEFIELDCOUNT" id="__VIEWSTATEFIELDCOUNT" value="2">
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="/wEPDwUKMjA1OTAyNzk1MQ9kFgJmD2QWAgIDD2QWAgIHD2QWCgIEDw8WBB4IQ3NzQ2xhc3MFOWFydC1sYXlvdXQtY2VsbCBhcnQtc2lkZWJhcjEgbGVmdHNpZGUgbGVmdDJjb2x1bW4gY21zem9uZR4EXyFTQgICZGQCBQ8PFgQfAAU1YXJ0LWxheW91dC1jZWxsIGFydC1jb250ZW50IGNlbnRlci1sZWZ0bWFyZ2luIGNtc3pvbmUfAQICZBYCAgUPZBYCZg9kFgICAg8PFgQfAAUUYXJ0LWNvbnRlbnQgY2xlYXJmaXgfAQICZBYCAgMPZBYCAgMPDxYEHwAFD2FydC1wb3N0Y29udGVudB8BAgJkFgICAQ9kFgQCAQ8PFgIeB1Zpc2libGVoZBYCAgEPZBYCZg9kFgICBQ9kFgJmDxYCHgpDYWxsYmFja0lEBSljdGwwMCRtYWluQ29udGVudCRjdGwwMCRSYXRpbmckVXNlclJh">
<input type="hidden" name="__VIEWSTATE1" id="__VIEWSTATE1" value="dGluZ2QCDQ8PFgIfAmhkFgICAQ9kFgJmD2QWAgIFD2QWAmYPFgIfAwUvY3RsMDAkbWFpbkNvbnRlbnQkY3RsMDAkUmF0aW5nQm90dG9tJFVzZXJSYXRpbmdkAgYPDxYGHwAFLmFydC1sYXlvdXQtY2VsbCBhcnQtc2lkZWJhcjIgcmlnaHRzaWRlIGNtc3pvbmUfAQICHwJoZGQCCw8PFgIfAmhkZAIMDw8WAh8CaGRkZEGVmyhkABgxMk4NCnZzYqVyOQ2P">


<script src="./o5LnD5eDUV_files/script.js" type="text/javascript"></script>
<script src="./o5LnD5eDUV_files/script.responsive.js" type="text/javascript"></script>
<script src="./o5LnD5eDUV_files/ScriptResource.axd" type="text/javascript"></script>
<input type="hidden" name="__VIEWSTATEGENERATOR" id="__VIEWSTATEGENERATOR" value="CA0B0334">
<input type="hidden" name="__EVENTVALIDATION" id="__EVENTVALIDATION" value="/wEdAAIbKDYAgSX7JitPB8lctylKluqpT+SRPGaj6Cukd6ylpweamw9OkJPzrJ/dfrSxkdKBZHtP">
    
    
    
    
	<div id="art-main">
<header class="art-header" style="background-position: 50% 0%;">

    <div class="art-shapes">
        
            </div>




<a href="https://web.archive.org/web/20170707172505/http://www.wildnoodle.com/home" class="art-logo art-logo-1719822334" style="left: 11.73px; top: 0px;; margin-left: 0px !important;">
    <img width="370" src="./o5LnD5eDUV_files/logo-1719822334.png" alt="">
</a>

                        
                    
</header>
<div class="art-sheet clearfix">
            <div class="art-layout-wrapper">
                <div class="art-content-layout">
	<div class="art-content-layout-row">
		<div id="ctl00_divLeft" class="art-layout-cell art-sidebar1 leftside left2column cmszone">

			
<div class="art-box art-vmenublock"><ul class="art-vmenu"><li><a href="https://web.archive.org/web/20170707172505/http://www.wildnoodle.com/home-1">home</a><ul><li><a href="https://web.archive.org/web/20170707172505/http://www.wildnoodle.com/privacy-policy-1">privacy policy</a></li></ul></li><li><a href="https://web.archive.org/web/20170707172505/http://www.wildnoodle.com/services">services</a><ul><li><a href="https://web.archive.org/web/20170707172505/http://www.wildnoodle.com/consulting-services">Consulting Services</a></li></ul></li><li><a href="https://web.archive.org/web/20170707172505/http://www.wildnoodle.com/blog">blog</a></li><li><a href="https://web.archive.org/web/20170707172505/http://www.wildnoodle.com/contact">contact</a></li><li><a href="https://web.archive.org/web/20170707172505/http://www.wildnoodle.com/about">about</a></li><li><a href="https://web.archive.org/web/20170707172505/http://wildnoodle.fasttrackteam.com/UI/Individuals/login.aspx">login</a></li><li><a href="https://web.archive.org/web/20170707172505/http://wildnoodle.fasttrackteam.com/UI/Individuals/registration.aspx">register</a></li></ul>
</div>



			
		
</div>
		<div id="ctl00_divCenter" class="art-layout-cell art-content center-leftmargin cmszone">

			
			
			<a id="startcontent"></a>
			
<div id="ctl00_mainContent_ctl00_pnlOuterWrap" class="art-content clearfix">


<div id="ctl00_mainContent_ctl00_pnlInnerWrap" class="panelwrapper htmlmodule">
<div class="art-post art-article">
<div class="art-postmetadataheader"><h2 id="module20" class="art-postheader moduletitle"><span class="art-postheadericon">Tutorial</span></h2></div>
<article id="ctl00_mainContent_ctl00_pnlOuterBody" class="art-postcontent">
<div class="art-content-layout"><div class="art-content-layout-row">
<div id="ctl00_mainContent_ctl00_pnlInnerBody" class="modulecontent">


<div id="ctl00_mainContent_ctl00_divContent" class="">
<table border="0" cellpadding="0" cellspacing="0" style="font-family: &quot;Times New Roman&quot;; font-size: medium;" width="100%">
	<tbody>
		<tr>
			<td valign="top">
			<table border="0" cellpadding="0" cellspacing="0" width="100%">
				<tbody>
					<tr>
						<td>
						<table cellpadding="0" cellspacing="0" class="maintext" style="font-stretch: normal; line-height: 17px; font-family: Verdana, Arial, Helvetica, sans-serif;" width="99%">
							<tbody>
								<tr>
									<td class="headertitlesubtopic" style="padding: 1px 3px 1px 7px; font-weight: bold; font-stretch: normal; font-size: 9px; line-height: normal; color: rgb(255, 255, 255); background-color: rgb(73, 161, 181); width: 1419.14px;">Introduction</td>
								</tr>
								<tr>
									<td colspan="2">Herbert is a programming game that requires you to solve a series of levels by writing small programs to control a robot. The simpler and more elegant your solution, the more points you get.</td>
								</tr>
								<tr>
									<td colspan="2">&nbsp;</td>
								</tr>
								<tr>
									<td class="headertitlesubtopic" style="padding: 1px 3px 1px 7px; font-weight: bold; font-stretch: normal; font-size: 9px; line-height: normal; color: rgb(255, 255, 255); background-color: rgb(73, 161, 181); width: 1419.14px;">An overview of the game</td>
								</tr>
								<tr>
									<td colspan="2">
									<p>Herbert challenges your ability to see patterns and create algorithms to produce these patterns.</p>

									<p>This Summer 2016 Contest contest consists of 25 levels. On each level there are some white buttons; to "solve" a level you must press all the white buttons. To press the buttons, you have at your disposal a programmable robot named Herbert. You must program Herbert, in a language called “h”, to press all the white buttons while avoiding obstacles such as walls and gray buttons (walls block Herbert's path and gray buttons will reset any previously pressed white buttons to their unpressed state). You are only allotted a certain number of "bytes" (a unit of program size) per level; your program must use no more than this number of bytes. This last restriction is not too stringent for the earlier levels where the goal is to simply write a program that works. However, you will find that your program must be small and cleanly designed in order to complete the higher levels. On each level, points are awarded for each white button pressed, a bonus is awarded for solving the level, and extra points are awarded for those solutions that use less than the allotted maximum number of bytes.</p>
									</td>
								</tr>
								<tr>
									<td align="center" colspan="2"><img alt="" height="434" src="./o5LnD5eDUV_files/Herbert_Tutorial_xp.gif" width="614"></td>
								</tr>
								<tr>
									<td colspan="2">&nbsp;</td>
								</tr>
								<tr>
									<td class="headertitlesubtopic" style="padding: 1px 3px 1px 7px; font-weight: bold; font-stretch: normal; font-size: 9px; line-height: normal; color: rgb(255, 255, 255); background-color: rgb(73, 161, 181); width: 1419.14px;">The “h” language</td>
								</tr>
								<tr>
									<td colspan="2">
									<p>Herbert is programmed in a simple but powerful language called “h”. “h” contains elements of traditional high-level languages: statements, procedures, parameters, arguments, and recursion. However, “h” is syntactically more simple, and contains some concepts (procedural arguments) that are not found in traditional languages.</p>

									<p>Here are the basic elements of “h”:</p>

									<table border="0" cellpadding="0" cellspacing="0" class="maintext" style="font-stretch: normal; line-height: 17px; font-family: Verdana, Arial, Helvetica, sans-serif;" width="100%">
										<tbody>
											<tr>
												<td class="headertitlesubtopic" style="padding: 1px 3px 1px 7px; font-weight: bold; font-stretch: normal; font-size: 9px; line-height: normal; color: rgb(255, 255, 255); background-color: rgb(73, 161, 181); width: 162px;">Element</td>
												<td class="headertitlesubtopic" style="padding: 1px 3px 1px 7px; font-weight: bold; font-stretch: normal; font-size: 9px; line-height: normal; color: rgb(255, 255, 255); background-color: rgb(73, 161, 181); width: 104.286px;">&nbsp;</td>
												<td class="headertitlesubtopic" style="padding: 1px 3px 1px 7px; font-weight: bold; font-stretch: normal; font-size: 9px; line-height: normal; color: rgb(255, 255, 255); background-color: rgb(73, 161, 181); width: 504.286px;">Syntax</td>
												<td class="headertitlesubtopic" style="padding: 1px 3px 1px 7px; font-weight: bold; font-stretch: normal; font-size: 9px; line-height: normal; color: rgb(255, 255, 255); background-color: rgb(73, 161, 181); width: 332.857px;">&nbsp;</td>
												<td class="headertitlesubtopic" style="padding: 1px 3px 1px 7px; font-weight: bold; font-stretch: normal; font-size: 9px; line-height: normal; color: rgb(255, 255, 255); background-color: rgb(73, 161, 181); width: 161.429px;">Examples</td>
												<td class="headertitlesubtopic" style="padding: 1px 3px 1px 7px; font-weight: bold; font-stretch: normal; font-size: 9px; line-height: normal; color: rgb(255, 255, 255); background-color: rgb(73, 161, 181); width: 104.286px;">&nbsp;</td>
											</tr>
											<tr class="maincelldark" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);">
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255);">Statement</td>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255);"><strong>s</strong>&nbsp;(go&nbsp;<span class="makeunderline" style="text-decoration: underline; font-stretch: normal; line-height: 17px;">s</span>traight),&nbsp;<strong>r</strong>&nbsp;(turn&nbsp;<span class="makeunderline" style="text-decoration: underline; font-stretch: normal; line-height: 17px;">r</span>ight), or&nbsp;<strong>l</strong>&nbsp;(turn&nbsp;<span class="makeunderline" style="text-decoration: underline; font-stretch: normal; line-height: 17px;">l</span>eft), a procedure call, or a procedural parameter.</td>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255);"><strong>s</strong></td>
											</tr>
											<tr class="maincelldark" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);">
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255);">Procedure definition</td>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255);"><strong>x</strong>[<strong>(P<sub>1</sub>,P<sub>2</sub>,...,P<sub>k</sub>)</strong>]<strong>:y<sub>1</sub>y<sub>2</sub>y<sub>3</sub></strong>...<strong>y<sub>n&nbsp;</sub></strong>where&nbsp;<strong>x</strong>&nbsp;is any lowercase letter (except<strong>&nbsp;s</strong>,&nbsp;<strong>r</strong>, or&nbsp;<strong>l</strong>),&nbsp;<strong>P<sub>i</sub></strong>&nbsp;is a parameter,&nbsp;<strong>y<sub>i</sub></strong>&nbsp;is any statement, 0 &lt;=&nbsp;<b>k</b>&nbsp;&lt;=15, and&nbsp;<b>n&nbsp;</b>&gt;=&nbsp;0. If&nbsp;<b>k</b>&nbsp;=&nbsp;0 (no parameters) then the parentheses are not used.</td>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255);"><strong>a:ssssr<br>
												b(C,D):sra(C)D</strong></td>
											</tr>
											<tr class="maincelldark" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);">
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255);">Parameter</td>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255);"><strong>X</strong>&nbsp;where&nbsp;<strong>X</strong>&nbsp;is any uppercase letter.</td>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255);"><strong>A</strong></td>
											</tr>
											<tr>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);">Expression</td>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);">[<b>-</b>]<b>&nbsp;X</b>&nbsp;[(<b>+</b>&nbsp;or&nbsp;<b>-</b>)&nbsp;<b>X</b>&nbsp;[(<b>+</b>&nbsp;or&nbsp;<b>-</b>)&nbsp;<b>X</b>&nbsp;[(<b>+</b>&nbsp;or&nbsp;<b>-</b>)&nbsp;<b>X</b>&nbsp;... ]]] where each X is either a numeric parameter or a number.</td>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);"><strong>5<br>
												A-5<br>
												-A-B-C+1</strong></td>
											</tr>
											<tr>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);">Argument</td>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);">Any number, expression, or sequence of zero or more statements.</td>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);"><strong>4<br>
												rsr<br>
												A-1</strong></td>
											</tr>
											<tr class="maincelldark" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);">
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255);">Procedure call</td>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255);"><strong>x</strong>[<strong>(a<sub>1</sub>,a<sub>2</sub>,...,a<sub>k</sub>)</strong>] where&nbsp;<b>x</b>&nbsp;is the name of a procedure and&nbsp;<strong>a<sub>i</sub></strong>&nbsp;is an argument (one for each parameter). If&nbsp;<b>k</b>&nbsp;=&nbsp;0 (no parameters) then the parentheses are not used. No call is made if any numeric argument is 0 or less.</td>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255);"><strong>a(1,B-1,srs)<br>
												b</strong></td>
											</tr>
											<tr>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);">Recursion</td>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);"><strong>x</strong>[<strong>(P<sub>1</sub>,P<sub>2</sub>,...,P<sub>k</sub>)</strong>]<strong>:</strong><strong>y<sub>1</sub>y<sub>2</sub>y<sub>3</sub></strong>...<strong>y<sub>m</sub>x</strong>[<strong>(a<sub>1</sub>,a<sub>2</sub>,a<sub>3</sub>,..,a<sub>k</sub>)</strong>]<strong>y<sub>m+1</sub>y<sub>m+2</sub>y<sub>m+3</sub></strong>...<strong>y<sub>n&nbsp;</sub></strong>where&nbsp;<strong>x</strong>&nbsp;is any lowercase letter (except<strong>&nbsp;s</strong>,&nbsp;<strong>r</strong>, or&nbsp;<strong>l</strong>),&nbsp;<strong>P<sub>i</sub></strong>&nbsp;is a parameter,&nbsp;<strong>a<sub>i</sub></strong>&nbsp;is an argument,&nbsp;<strong>y<sub>i</sub></strong>&nbsp;is any statement, 0&lt;=&nbsp;<b>k</b>&nbsp;&lt;=&nbsp;15,&nbsp;<b>m</b>&nbsp;&gt;=&nbsp;0, and&nbsp;<b>n&nbsp;</b>&gt;=&nbsp;0.</td>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);"><strong>a(A):sa(A-1)<br>
												b:sssrb</strong></td>
											</tr>
											<tr>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);">Main Procedure</td>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);"><strong>y<sub>1</sub>y<sub>2</sub>y<sub>3</sub></strong>...<strong>y<sub>n</sub>&nbsp;</strong>where&nbsp;<strong>y<sub>i</sub></strong>&nbsp;is any statement and&nbsp;<b>n</b>&nbsp;&gt;=&nbsp;1.</td>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);"><strong>sa(1,rsr)r</strong></td>
											</tr>
											<tr>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);">Program</td>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);">
												<p><strong>&lt;procedure definition&gt;&nbsp;</strong><br>
												<strong>&nbsp;&nbsp;&nbsp;&nbsp; :</strong><br>
												<strong>&nbsp;&nbsp;&nbsp;&nbsp; :</strong><br>
												<strong>&lt;main procedure&gt;</strong></p>
												</td>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);"><strong>a:ssssra<br>
												sssa</strong></td>
											</tr>
											<tr>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);">Byte</td>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);">Any lowercase or uppercase letter, or any number</td>
												<td class="maincelldark" colspan="2" style="padding: 10px 10px 10px 12px; border-top: 1px solid rgb(255, 255, 255); border-left: 1px solid rgb(255, 255, 255); background-color: rgb(185, 226, 234);"><strong>s</strong><br>
												<strong>A</strong><br>
												<strong>123</strong></td>
											</tr>
										</tbody>
									</table>
									</td>
								</tr>
								<tr>
									<td colspan="2">&nbsp;</td>
								</tr>
								<tr>
									<td class="headertitlesubtopic" style="padding: 1px 3px 1px 7px; font-weight: bold; font-stretch: normal; font-size: 9px; line-height: normal; color: rgb(255, 255, 255); background-color: rgb(73, 161, 181); width: 1419.14px;">Take a test drive</td>
								</tr>
								<tr>
									<td colspan="2">
									<p>Here is a short tutorial to get you familiar with “h” and with Herbert.<br>
									<br>
									First, make sure that your system is able to run Herbert with all of its functionality. See&nbsp;<a class="whitetext" href="https://web.archive.org/web/20170707172505/http://wildnoodle.fasttrackteam.com/UI/Compete/help.aspx?CId=pBUgPLCXw3RO2MOODg71wg==" style="font-stretch: normal; line-height: 17px; font-family: Verdana, Arial, Helvetica, sans-serif; color: rgb(58, 131, 148);">help</a>&nbsp;for more information on minimum systems requirements and required security settings.<br>
									<br>
									Next,&nbsp;<a class="whitetext" href="https://web.archive.org/web/20170707172505/http://wildnoodle.fasttrackteam.com/UI/Compete/Tutorial.aspx?CId=pBUgPLCXw3RO2MOODg71wg==#Tutorial" style="font-stretch: normal; line-height: 17px; font-family: Verdana, Arial, Helvetica, sans-serif; color: rgb(58, 131, 148);">click here to run a practice version of Herbert</a>.<br>
									<br>
									You can now follow along in the tutorial by both writing programs yourself, and checking them against the examples given, or by copying and pasting the examples from this page into Herbert to see how they work.</p>

									<p>In this tutorial we'll learn how to program in "h" by writing a program that makes Herbert go around in a square. We'll start out with a simple solution and then show how procedures and parameters can be used to simplify and/or generalize the solution.</p>

									<p>Our first task is to program Herbert to go around in a square 5 units per edge, and then end in the same position and facing the same direction in which he started.</p>

									<p>The tutorial consists of a single level (level 0) which is free of buttons and obstructions. Go to the Options menu, turn on "trace", and make sure "Path" is enabled, so you can better see what your program is doing. At any time during this tutorial, feel free to adjust Herbert's speed by using the scroll bar on the bottom of the Herbert window. To watch a program more carefully, you may halt it at any time by choosing "Halt" from the "Run" menu, pressing the Halt (Pause) toolbar button, or simply clicking anywhere in the text area. You can also place a vertical bar "|" (a breakpoint) at the point in the program where you want it to stop. Once the program is halted, you can start stepping through the program one command at a time ("Step" in the "Run" menu or on the toolbar), resume execution ("Resume"), or reset Herbert to his starting position ("Reset").</p>

									<p>Type the following into the program text area:</p>

									<p class="Indent1"><strong>sssssrsssssrsssssrsssssr</strong></p>

									<p>Now choose "Go" from the "Run" menu. Note that "s" makes Herbert go forward one unit, while "r" makes him turn one-quarter turn to the right. As you might guess, "l" (the letter "ell") would make him turn one-quarter turn to the left. These three commands are the only ones Herbert understands.</p>

									<p>Now reset Herbert by choosing "Reset" from the "Run" menu (or simply go ahead and edit the program; Herbert will be automatically reset on your first edit) and try:</p>

									<p class="Indent1"><strong>a:sssssr</strong><br>
									<strong>aaaa</strong></p>

									<p>Here you've defined a procedure called "a", which does "sssssr" whenever called. By calling it four times in a row, this is effectively the same as the first example, but it's a smaller program; 11 bytes versus 24. Any single lowercase letter is legal as a procedure name (except for "s", "r", and "l" which already mean something to Herbert).</p>

									<p>Even simpler is:</p>

									<p class="Indent1"><strong>a:sssssra</strong><br>
									<strong>a</strong></p>

									<p>Here "a" does "sssssr" as before, and then calls itself (which then does "sssssr" and calls itself ...). When a procedure calls itself, this is called "recursion". This example is an infinite recursion; Herbert doesn't stop when he's done with the square. There is no problem with this in itself, since Herbert has an infinite stack, but you can stop him if you want by choosing "Halt" on the "Run" menu. You may wish to limit the depth of the recursion in the program itself if, for instance, you wanted him to do something else after he's gone around in a square. To do this you must use a parameter:</p>

									<p class="Indent1"><strong>a(A):sssssra(A-1)</strong><br>
									<strong>a(4)</strong></p>

									<p>Parameters are always single uppercase letters. When a procedure with parameters is called, you must supply "arguments" for each parameter (here the argument for "A" is initially 4, then 3, then 2, etc.). The rule with arguments in "h" is that if any numeric argument in a procedure call evaluates to 0 or less, the call is not made.</p>

									<p>You can also use a second parameter to vary the size of the square.</p>

									<p class="Indent1"><strong>a(A,B):f(B)ra(A-1,B)</strong><br>
									<strong>f(A):sf(A-1)</strong><br>
									<strong>a(4,5)</strong></p>

									<p>Now change the "5" to "8" and see what happens. Study the procedure "f" here (we've used the letter "f" to stand for "forward"). This procedure is a very important one and will appear time and time again in your solutions.</p>

									<p>Parameters can be supplied with "procedural" arguments as well as numeric ones. try:</p>

									<p class="Indent1"><strong>a(A,B,C):f(B)Ca(A-1,B,C)</strong><br>
									<strong>f(A):sf(A-1)</strong><br>
									<strong>a(4,5,r)</strong></p>

									<p>Then, try changing the "r" to an "l" (ell).</p>

									<p>That's all there is to it! For more practice with "h", try the following variations of our square program. What does each one do?</p>

									<p class="Indent1"><strong>a(A,B,C):f(B)Ca(A-1,B,C)</strong><br>
									<strong>b(A):a(4,5,r)lb(A-1)</strong><br>
									<strong>f(A):sf(A-1)</strong><br>
									<strong>b(4)</strong></p>

									<p class="Indent1"><strong>a(A,B,C):f(B)Ca(A-1,B,C)</strong><br>
									<strong>b(A):a(4,A,r)b(A-1)</strong><br>
									<strong>f(A):sf(A-1)</strong><br>
									<strong>b(10)</strong></p>

									<p class="Indent1"><strong>a(A,B,C):f(B)Ca(A-1,B,C)</strong><br>
									<strong>b(A):a(2,11-A,r)b(A-1)</strong><br>
									<strong>f(A):sf(A-1)</strong><br>
									<strong>b(10)</strong></p>

									<p class="Indent1"><strong>a(A,B,C):f(B)Ca(A-1,B,C)</strong><br>
									<strong>f(A):sf(A-1)</strong><br>
									<strong>a(4,5,rslsr)</strong></p>
									</td>
								</tr>
								<tr>
								</tr>
								<tr>
								</tr>
								<tr>
									<td colspan="2">&nbsp;</td>
								</tr>
								<tr>
									<td class="headertitlesubtopic" style="padding: 1px 3px 1px 7px; font-weight: bold; font-stretch: normal; font-size: 9px; line-height: normal; color: rgb(255, 255, 255); background-color: rgb(73, 161, 181); width: 1419.14px;">Limitations and Advanced Techniques</td>
								</tr>
								<tr>
									<td colspan="2">Herbert is a pretty capable robot, but he does have his limits:
									<ul>
										<li>"h" programs can be a maximum of 999 characters (including special characters and digits). Your program can have a maximum of 15 lines, and each line can have a maximum of 127 characters (excluding the function prototype; that is, including everything after the ":").<br>
										&nbsp;</li>
										<li>Numbers are limited to the range between -2<sup>8</sup>&nbsp;and +2<sup>8</sup>&nbsp;- 1 (-256 to 255). You will receive a runtime error if a numeric argument evaluates to a number outside this range.<br>
										&nbsp;</li>
										<li>Herbert's stack is circular and is 64K. For a procedure call, the size of each stack frame is 4 * (1 + number of arguments). For evaluating procedural arguments, a stack frame of size 8 is used. What this means in practice is that programs that recur infinitely, without returning, and without nested procedural arguments, can run forever. Other programs are limited to a maximum call depth of approximately 2,000 calls (depending on the number of arguments being passed). You will receive a runtime error if you attempt to return from a call stack which exceeds this size.<br>
										&nbsp;</li>
										<li>There is no inherent time limit to running Herbert programs. Keep in mind, however, that your score will be based on the number of buttons pressed (and score uploaded) by the end of the contest.<br>
										&nbsp;</li>
										<li>Level 0, in both the tutorial and full version of Herbert, is a practice level. Programs left on this level are not saved or restored across program sessions.</li>
									</ul>
									</td>
								</tr>
							</tbody>
						</table>
						</td>
					</tr>
				</tbody>
			</table>
			</td>
		</tr>
	</tbody>
</table>

</div>
<input type="hidden" name="ctl00$mainContent$ctl00$hdnIsDirty" id="ctl00_mainContent_ctl00_hdnIsDirty">






</div>
<div id="ctl00_mainContent_ctl00_divFooter" class="modulefooter">

</div>
</div></div>
</article>
<div id="ctl00_mainContent_ctl00_divCleared" class="cleared">

</div>
</div><div class="cleared"></div>
</div>


</div>

		
</div>
		
	</div>
</div>
            </div>
    </div>
<footer class="art-footer clearfix">
	<div class="art-footer-body">
	<div class="art-footer-center">
	<div class="art-footer-wrapper">
		
		<div class="art-footer-text">
			<div class="footerleftpanel">
				 &nbsp;&nbsp; ©Copyright 2005-2017 Wild Noodle. All Rights Reserved. 
				
              </div>

           <div class="footerrightpanel">
                <span><a href="https://web.archive.org/web/20170707172505/https://twitter.com/WildNoodleCorp"><img src="./o5LnD5eDUV_files/footertwittericon.png" width="20" height="20"></a></span>
                <span><a href="https://web.archive.org/web/20170707172505/https://www.linkedin.com/company/wild-noodle?trk=top_nav_home"><img src="./o5LnD5eDUV_files/linkedinicon.png" width="20" height="20"></a></span>
                <span><a href="https://web.archive.org/web/20170707172505/https://www.facebook.com/Wild-Noodle-1707516242871140/"><img src="./o5LnD5eDUV_files/footerfacebookicon.png" width="20" height="20"></a></span>
				<span><a href="https://web.archive.org/web/20170707172505/https://plus.google.com/114559067342780389526"><img width="20" height="20" src="./o5LnD5eDUV_files/gplus_icon.png"></a></span>
		   </div>

		</div>
	</div>
	</div>
	<div class="cleared"></div>
   </div>
</footer>

</div>	
	
	<div class="topnavwrap">
		<div class="topnav">
			<ul>
				
                
                <li class="topnavitem"><a class="sitelink" href="https://web.archive.org/web/20170707172505/http://www.wildnoodle.com/SiteMap.aspx">Site Map</a></li>
				<li class="topnavitem"><a href="https://web.archive.org/web/20170707172505/http://www.wildnoodle.com/SearchResults.aspx" class="sitelink">Search</a></li>
                
				<li class="topnavitem"><a class="sitelink" rel="nofollow" href="https://web.archive.org/web/20170707172505/http://www.wildnoodle.com/Secure/Login.aspx?returnurl=%2ftutorial-1">Sign In</a></li>
				
			</ul>
		</div>
	</div>
	<script type="text/javascript">
		function HideMenuToolbar() { $("#toolbar").fadeOut(); $("#toolbarbut").fadeIn("slow"); }
		function ShowMenuToolbar() { $("#toolbar").fadeIn(); $("#toolbarbut").fadeOut("slow"); }
		$(document).ready(function () {
			$("span.downarr a").click(function () { HideMenuToolbar(); Set_Cookie('openstate', 'closed') });
			$("span.showbar a").click(function () { ShowMenuToolbar(); Set_Cookie('openstate', 'open') });
			$("span.downarr a, span.showbar a").click(function () { return false; });
			var openState = Get_Cookie('openstate');
			if (openState != null) { if (openState == 'closed') { HideMenuToolbar(); } if (openState == 'open') { ShowMenuToolbar(); } }
		});	
	</script>
	
	<div class="cleared">
	</div>



<script type="text/javascript">Sys.Application.add_load(function() { var form = Sys.WebForms.PageRequestManager.getInstance()._form; form._initialAction = form.action = window.location.href; }); </script>
<script type="text/javascript"> $('div.mojo-accordion').accordion({});$('div.mojo-accordion-nh').accordion({heightStyle:'content',animate:{opacity:'toggle',duration:'400'}}); $('div.mojo-tabs').tabs({}); $('input.jqbutton').button(); $('.jqtt').tooltip(); $('.faqs dd').hide();$('.faqs dt').hover(function(){$(this).addClass('hover')},function(){$(this).removeClass('hover')}).click(function(){ $(this).next().slideToggle('normal'); });  $("a.unclickable").click(function(){ return false; });</script></form>

<script type="text/javascript"> 
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true; 
ga.src = ('https:' == document.location.protocol ? 'https://web.archive.org/web/20170707172505/https://ssl' : 'https://web.archive.org/web/20170707172505/http://www') + '.google-analytics.com/ga.js';
(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
})();
</script>


<!--
     FILE ARCHIVED ON 17:25:05 Jul 07, 2017 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 11:37:06 May 02, 2020.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
<!--
playback timings (ms):
  load_resource: 108.628
  captures_list: 147.972
  exclusion.robots: 0.348
  RedisCDXSource: 2.781
  PetaboxLoader3.resolve: 118.867 (3)
  exclusion.robots.policy: 0.33
  CDXLines.iter: 17.491 (3)
  esindex: 0.012
  PetaboxLoader3.datanode: 82.842 (4)
  LoadShardBlock: 124.528 (3)
--><div id="art-resp"><div id="art-resp-m"></div><div id="art-resp-t"></div></div><div id="art-resp-tablet-landscape"></div><div id="art-resp-tablet-portrait"></div><div id="art-resp-phone-landscape"></div><div id="art-resp-phone-portrait"></div></body></html>